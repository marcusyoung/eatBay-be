{
  "GET /api": {
    "description": "Serves a JSON representation of all available endpoints of this api"
  },
  "GET /api/shops": {
    "description": "Serves an array of all shops",
    "queries": [],
    "exampleResponse": {
      "shops": [
        {
          "shop_id": 1,
          "admin": "marcus@northcoders.com",
          "shop_name": "329 Cafe and Lounge",
          "address": "329 Shirley Road",
          "longitude": "-1.4276787",
          "latitude": "50.9181462",
          "shop_type": "Restaurant/Cafe/Canteen",
          "food_count": 2,
          "pickup_times": "Mon-Sat 9pm - 11pm, Sun 8pm - 10pm",
          "picture_url": "https://lh3.googleusercontent.com/p/AF1QipNp7eNZ3D9EV0fpEXMq0Kb9OivMusjTzwZXoDpy=s1360-w1360-h1020",
          "notifications": true
        }
      ]
    }
  },
  "GET /api/food": {
    "description": "Serves an array of all food items",
    "queries": [],
    "exampleResponse": {
      "foods": [
        {
          "food_id": 1,
          "shop_id": 3,
          "item_name": "Pizza",
          "quantity": 10,
          "item_description": "Hawaiian pizza, topped with pepperoni and cheese"
        }
      ]
    }
  },
  "GET /api/food/:food_id": {
    "description": "Serves a food object",
    "queries": [],
    "exampleResponse": {
      "food": {
        "food_id": 1,
        "shop_id": 3,
        "item_name": "Pizza",
        "quantity": 10,
        "item_description": "Hawaiian pizza, topped with pepperoni and cheese"
      }
    }
  },
  "GET /api/shops/:shop_id/food": {
    "description": "Serves an array of all food items for a specific shop_id",
    "queries": [],
    "exampleResponse": {
      "foods": [
        {
          "food_id": 1,
          "shop_id": 3,
          "item_name": "Pizza",
          "quantity": 10,
          "item_description": "Hawaiian pizza, topped with pepperoni and cheese"
        }
      ]
    }
  },
  "GET /api/users/:user_id": {
    "description": "Serves a user object for a specific user_id. If a user has a shop, the value of users_shop_id will be the shop_id, otherwise the value will be null",
    "queries": [],
    "exampleResponse": {
      "user": {
        "user_id": "marcus@northcoders.com",
        "name": "Marcus",
        "notifications": true,
        "avatar_url": "https://www.healthytherapies.com/wp-content/uploads/2016/06/Lime3.jpg",
        "users_shop_id": 1
      }
    }
  },
  "GET /api/shops/:shop_id": {
    "description": "Serves a shop object for a specific shop_id",
    "queries": [],
    "exampleResponse": {
      "shop": {
        "shop_id": 1,
        "admin": "marcus@northcoders.com",
        "shop_name": "329 Cafe and Lounge",
        "address": "329 Shirley Road",
        "shop_type": "Restaurant/Cafe/Canteen",
        "longitude": "-1.4276787",
        "latitude": "50.9181462",
        "pickup_times": "Mon-Sat 9pm - 11pm, Sun 8pm - 10pm",
        "picture_url": "https://lh3.googleusercontent.com/p/AF1QipNp7eNZ3D9EV0fpEXMq0Kb9OivMusjTzwZXoDpy=s1360-w1360-h1020",
        "notifications": true
      }
    }
  },
  "POST /api/users": {
    "description": "Posts a user object",
    "queries": [],
    "exampleBody": {
      "user_id": "mitch@northcoders.com",
      "password": "northcoders",
      "name": "Mitch"
    },
    "exampleResponse": {
      "user": {
        "user_id": "mitch@northcoders.com",
        "name": "Mitch"
      }
    }
  },
  "POST /api/shops": {
    "description": "Posts a shop object. The value of admin must be an existing user_id. A user can only have one shop.",
    "queries": [],
    "exampleBody": {
      "admin": "keith22@northcoders.com",
      "shop_name": "Keith's Cafe Ltd",
      "address": "Southampton Harley Davidson",
      "longitude": -1.459433,
      "latitude": 50.917245,
      "shop_type": "Restaurant/Cafe/Canteen",
      "pickup_times": "Mon-Sat 9pm - 11pm, Sun 8pm - 10pm",
      "picture_url": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh0eTVVGmN6CnrWTtfiL7QpJBTpIBsFpd0kZuPQfWwnwL6DHAmU5-eqkVbak84PfJYxjaJZMyLXbqOOfItSchjUS7IrJ_Ezamolbc0_ZtTOHRuGg8hAibbHsGo2wBUrLbYDhIYZ43o_gWNF/s1600/IMG_2341.JPG",
      "notifications": true
    },
    "exampleResponse": {
      "shop": {
        "shop_id": 6,
        "admin": "keith22@northcoders.com",
        "shop_name": "Keith's Cafe Ltd",
        "address": "Southampton Harley Davidson",
        "shop_type": "Restaurant/Cafe/Canteen",
        "longitude": "-1.459433",
        "latitude": "50.917245",
        "pickup_times": "Mon-Sat 9pm - 11pm, Sun 8pm - 10pm",
        "picture_url": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh0eTVVGmN6CnrWTtfiL7QpJBTpIBsFpd0kZuPQfWwnwL6DHAmU5-eqkVbak84PfJYxjaJZMyLXbqOOfItSchjUS7IrJ_Ezamolbc0_ZtTOHRuGg8hAibbHsGo2wBUrLbYDhIYZ43o_gWNF/s1600/IMG_2341.JPG",
        "notifications": true
      }
    }
  },
  "POST /api/shops/:shop_id/food": {
    "description": "Posts a food object",
    "queries": [],
    "exampleBody": {
      "shop_id": 4,
      "item_name": "Plain margherita pizza",
      "quantity": 1,
      "item_description": "Fugiat consectetur non deserunt consectetur aute aliquip aliquip cillum cupidatat aliqua occaecat sunt in velit."
    },
    "exampleResponse": {
      "food": {
        "food_id": 6,
        "shop_id": 4,
        "item_name": "Plain margherita pizza",
        "quantity": 1,
        "item_description": "Fugiat consectetur non deserunt consectetur aute aliquip aliquip cillum cupidatat aliqua occaecat sunt in velit."
      }
    }
  },
  "DELETE /api/food/:food_id": {
    "description": "Deletes a food object"
  },
  "PATCH /api/food/:food_id/change_quantity": {
    "description": "Decrements or increments the quantity of a specific food item",
    "queries": [],
    "exampleBody": { "change_quantity": -1 },
    "exampleResponse": {
      "food_id": 1,
      "shop_id": 3,
      "item_name": "Pizza",
      "quantity": 9,
      "item_description": "Hawaiian pizza, topped with pepperoni and cheese"
    }
  },
  "GET /api/shops/:shop_id/reservations": {
    "description": "Serves an array of all reservations for a specific shop_id",
    "queries": [],
    "exampleResponse": {
      "reservations": [
        {
          "reservation_id": 515057,
          "user_id": "sofe@northcoders.com",
          "shop_id": 2,
          "food_id": 3,
          "status": "Pending collection",
          "item_name": "Cheese burger"
        }
      ]
    }
  },
  "GET /api/users/:user_id/reservations": {
    "description": "Serves an array of all reservations for a specific user_id",
    "queries": [],
    "exampleResponse": {
      "reservations": [
        {
          "id": 3,
          "reservation_id": 515057,
          "user_id": "sofe@northcoders.com",
          "shop_id": 2,
          "food_id": 3,
          "status": "Pending collection",
          "shop_name": "7 Bone Southampton",
          "address": "29 Bedford Place",
          "pickup_times": "Mon-Thu & Sun 7.30pm - 9.30pm, Fri-Sat 8.30pm - 10.30pm",
          "item_name": "Cheese burger"
        }
      ]
    }
  },
  "POST /api/reservations": {
    "description": "Posts a reservation for a food item",
    "exampleBody": {
      "user_id": "verity@northcoders.com",
      "shop_id": 3,
      "food_id": 1,
      "status": "Pending collection"
    },
    "exampleResponse": {
      "id": 6,
      "reservation_id": 161663,
      "user_id": "verity@northcoders.com",
      "shop_id": 3,
      "food_id": 1,
      "status": "Pending collection"
    }
  },
  "PATCH /api/reservations/:reservation_id": {
    "description": "Updates the status of reservation",
    "exampleBody": {
      "status": "Sold"
    },
    "exampleResponse": {
      "id": 6,
      "reservation_id": 161663,
      "user_id": "verity@northcoders.com",
      "shop_id": 3,
      "food_id": 1,
      "status": "Sold"
    }
  },
  "GET /api/shops/:shop_id/followers": {
    "description": "Serves an array of followers for a specific shop_id",
    "queries": [],
    "exampleResponse": {
      "followers": [
        {
          "follower_id": 3,
          "user_id": "marcus@northcoders.com",
          "shop_id": 1,
          "push_token": null
        },
        {
          "follower_id": 5,
          "user_id": "sofe@northcoders.com",
          "shop_id": 1,
          "push_token": null
        }
      ]
    }
  },
  "POST /api/shops/followers": {
    "description": "Posts a new follower of a shop",
    "exampleBody": { "user_id": "jennifer@northcoders.com", "shop_id": 2 },
    "exampleResponse": {
      "follower": {
        "follower_id": 6,
        "user_id": "jennifer@northcoders.com",
        "shop_id": 2
      }
    }
  },
  "DELETE /api/shops/:shop_id/:user_id/followers": {
    "description": "Deletes a follower with a matching user_id and shop_id"
  },
  "DELETE /api/reservations/:reservation_id": {
    "description": "Deletes a reservation if its status is 'Pending collection'. A reservation that has 'Sold' status cannot be deleted"
  },
   "PATCH /api/users/:user_id": {
    "description": "Updates specified user, only provide the keys that require updating",
    "exampleBody": { 
      "name": "Johnny",
      "password": "johnny1234",
      "push_token": "1234GH-1234GH"
   },
   "exampleResponse": {
    "user": { 
      "name": "Johnny", 
      "push_token": "1234GH-1234GH" 
    }
   }
  }
}
